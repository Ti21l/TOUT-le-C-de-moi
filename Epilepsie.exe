#include <stdlib.h>
#include <stdio.h>
#include <SDL.h>

/*void draw(SDL_Renderer * m_renderer)
{
 // Clear the window with a black background
     SDL_SetRenderDrawColor( m_renderer, 0, 0, 0, 255 );
     SDL_RenderClear( m_renderer );
     // Show the window
     SDL_RenderPresent( m_renderer );
     int rgb[] = { 203, 203, 203, // Gray
         254, 254, 31, // Yellow
         0, 255, 255, // Cyan
         0, 254, 30, // Green
         255, 16, 253, // Magenta
         253, 3, 2, // Red
         18, 14, 252, // Blue
         0, 0, 0 // Black
        };
     SDL_Rect colorBar;
     colorBar.x = 0; colorBar.y = 0; colorBar.w = 90; colorBar.h = 480;
     // Render a new color bar every 0.5 seconds
     for ( int i = 0; i != sizeof rgb / sizeof *rgb; i += 3, colorBar.x += 90 )
     {
         SDL_SetRenderDrawColor( m_renderer, rgb[i], rgb[i + 1], rgb[i + 2], 255 );
         SDL_RenderFillRect( m_renderer, &colorBar );
         SDL_RenderPresent( m_renderer );
         SDL_Delay( 500 );
    }
}*/



int main( int argc, char * argv[] )
{
    SDL_Window * m_window = NULL;
    SDL_Renderer * m_renderer = NULL;
    if (SDL_Init( SDL_INIT_VIDEO | SDL_INIT_TIMER ) == -1)
    {
        fprintf(stderr, "Erreur d'initialisation de la SDL : %s\n", SDL_GetError());
        exit(EXIT_FAILURE);
    } // Toujours appelée
    SDL_CreateWindowAndRenderer( 750, 750, SDL_WINDOW_SHOWN,&m_window, &m_renderer );
// Toujours appelée
        SDL_Event events;
        bool isOpen{ true };
             while (isOpen) {
             while (SDL_PollEvent(&events)) {
             switch (events.type) {
             case SDL_QUIT:
             isOpen = false;
             break; }
        }

        SDL_Event events;
     bool isOpen{ true };
        SDL_Rect rectangle = {150,150,100,50};
        SDL_Rect rectangle2 = {350,150,100,50};
        SDL_Rect rectangle1 = {300-25, 300-75, 50, 200};
        SDL_Rect rectangle3 = {125, 125 , 350 , 200 };
        int i = 0 ;
        while (isOpen)
        {
        while (SDL_PollEvent(&events))
        {
        switch (events.type)
        {
        case SDL_QUIT:
            isOpen = false;
        break;
            }
        }
            int r = rand()%255;
            int g = rand()%255;
            int b = rand()%255;


            int x= rand()%300;
            int y = rand()%300;

            SDL_SetRenderDrawColor(m_renderer, r, g, b, 255); // noir
            SDL_RenderClear(m_renderer); // fond noir
            SDL_SetRenderDrawColor(m_renderer, 255, 255, 255, 255); // blanc
            SDL_RenderFillRect(m_renderer, &rectangle); // rectangle rempli en noir
            SDL_SetRenderDrawColor(m_renderer, 255, 255, 255, 255); // blanc
            SDL_RenderFillRect(m_renderer, &rectangle2); // rectangle rempli en noir
            SDL_SetRenderDrawColor(m_renderer, 0, 255, 160, 255); // vert
            SDL_RenderDrawRect(m_renderer, &rectangle1); // contour rectangle vert
             SDL_SetRenderDrawColor(m_renderer, 255, 255, 160, 255); // vert
            SDL_RenderDrawRect(m_renderer, &rectangle3); // contour rectangle vert

        rectangle = {150+x,150+y,100,50};
        rectangle2 = {350+x,150+y,100,50};
         rectangle1 = {300-25+x, 300-75+y, 50, 200};
        rectangle3 = {125+x, 125+y , 350 , 200 };
        i++;


            SDL_RenderPresent(m_renderer); // affichage


     }
        }



    SDL_DestroyWindow( m_window ); // Toujours appelée
    SDL_DestroyRenderer( m_renderer ); // Toujours appelée
    SDL_Quit(); // Toujours appelée
 return EXIT_SUCCESS;
}
